---
title: "06_analysis_2"
author: "Group12"
format: html
editor: visual
---

## 

## Clear environment

```{r}
# | echo: true 
# | eval: true 

rm(list = ls())
```

## Load libraries

```{r}
# | echo: true 
# | eval: true

library("tidyverse")
library(reshape2)
library(corrr)
```

## Load data

```{r}
# | echo: true 
# | eval: true  

blood_measurements <- read_tsv(file = "../data/PCOS_blood_measurements_aug.tsv") 
```

# Blood data analysis

First part of this project, is to see if there is a correlation between patients with PCOS using the data from the blood samples.

## Boxplot of PCOS diagnosis of Anti-MÃ¼llerin hormone (AMH) 

```{r}
# | echo: true 
# | eval: true 

box_AMH <- blood_measurements |> 
  ggplot(mapping = aes(x = PCOS_diagnosis,
                       y = AMH,
                       fill = PCOS_diagnosis)) + 
  geom_boxplot(outliers = FALSE)+
  labs(x = "PCOS diagnosis", 
       y = "AMH level",
       title = "Boxplot of AMH level and PCOS diagnosis",
       fill = "PCOS diagnosis")+
  scale_fill_brewer(palette = "Set2")+
  theme_light()+
  theme(title = element_text(size = 8),
        legend.position = "bottom")


# Saving the plot as a picture
ggsave(box_AMH,
       filename = "../results/06_box_AMH.png",
       device = "png",
       height = 20,
       width = 20,
       units = "cm")
```

## Densityplot of prolactin (PRL) 

```{r}
# | echo: true 
# | eval: true  

# Creating density plot
PRL_density <- blood_measurements |> 
  ggplot(mapping = aes(x = PCOS_diagnosis, y=PRL, fill = PCOS_diagnosis)) + 
  geom_violin(alpha = 0.90) +
  geom_point(position = "jitter",
             alpha = 0.2) +
  labs(x = "PCOS diagnosis (", 
       y = "Density",
       title = "Density of PCOS patients with PRL values",
       fill = "PCOS diagnosis") +
  scale_fill_brewer(palette = "Set2") +
  theme_light() +
  theme(title = element_text(size = 8),
        legend.position = "bottom")

# saving the plot
ggsave(PRL_density,
       filename = "../results/06_PRL_density.png",
       device = "png",
       height = 20,
       width = 20,
       units = "cm")
```

## Header for endnu flere plots

```{r}
# | echo: true 
# | eval: true  


hormones <- c("FSH", "LH", "FSH_LH_ratio", "TSH", "AMH", "PRL", "vitaminD3", "PRG", "RBS")

blood_measurements[hormones] <- lapply(blood_measurements[hormones], as.numeric)

blood_measurements$PCOS_diagnosis <- ifelse(blood_measurements$PCOS_diagnosis == "Yes", 1, 0)

cor_matrix <- cor(blood_measurements[hormones], blood_measurements$PCOS_diagnosis)

cor_long <- melt(cor_matrix)


ggplot(cor_long, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
  labs(title = "Correlation Heatmap: Hormones and PCOS Diagnosis",
       x = "Hormones", y = "PCOS Diagnosis") +
  theme_light()

```

## Correlation plot of the variables from the blood measurments

```{r}
# Make a correlation table of the variables
cor_table <- blood_measurements |>  
  select(hemaglobin, betaHCG_1, betaHCG_2, FSH, LH, TSH, AMH, PRL, vitaminD3, PRG, RBS)|> 
  correlate(diagonal = 1)

melted_table <- cor_table |> 
  pivot_longer(-term, names_to = "variable", values_to = "value")

# Order the axis
melted_table <- melted_table |> 
  mutate(
    term = factor(term, levels = cor_table$term),
    variable = factor(variable, levels = cor_table$term)
  )

cor_blood_plot <- ggplot(data = melted_table, 
       mapping = aes(x = term, 
                     y = variable, 
                     fill = value)) + 
  geom_tile() +
  scale_y_discrete(limits = rev(levels(melted_table$variable))) +
  theme_light() + 
 theme(axis.text.x = element_text(angle = 45, 
                                  vjust = 1, 
                                  size = 7, 
                                  hjust = 1),
       axis.text.y = element_text(size = 7),
       legend.position = "bottom")+
 coord_fixed()+
  scale_fill_gradient2(low = "#1B9E77", 
                       high = "#D95F02", 
                       mid = "white", 
                       midpoint = 0, 
                       limit = c(-1,1), 
                       space = "Lab")+
  labs(x = "", 
       y = "", 
       fill = "Correlation",
       title = "Correlationplot of the blood values")+
  theme(title = element_text(size = 8))


ggsave(cor_blood_plot,
       filename = "../results/06_cor_blood_plot.png",
       device = "png",
       height = 20,
       width = 20,
       units = "cm")
```
